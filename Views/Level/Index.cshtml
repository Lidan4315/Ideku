@model IEnumerable<Ideku.Models.Entities.Level>
@{
    ViewData["Title"] = "Level Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-header mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="page-title text-gradient">
                            <i class="bi bi-diagram-3 me-2"></i>Level Management
                        </h2>
                        <p class="text-muted">Manage workflow levels and their configurations</p>
                    </div>
                    <div>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addLevelModal">
                            <i class="bi bi-plus-circle me-2"></i>Add Level
                        </button>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th>ID</th>
                                        <th>Level Name</th>
                                        <th>Description</th>
                                        <th>Status</th>
                                        <th>Created Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var level in Model)
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-light text-dark fw-bold">@level.Id</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-primary">@level.LevelName</span>
                                            </td>
                                            <td>
                                                <div class="fw-semibold text-dark">@level.Desc</div>
                                            </td>
                                            <td>
                                                @{
                                                    var statusClass = level.IsActive ? "bg-success" : "bg-danger";
                                                    var statusText = level.IsActive ? "Active" : "Inactive";
                                                }
                                                <span class="badge @statusClass">@statusText</span>
                                            </td>
                                            <td>
                                                <div class="text-dark fw-semibold">@level.CreatedAt.ToString("MMM dd, yyyy")</div>
                                                <small class="text-muted">@level.CreatedAt.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", "Level", new { id = level.Id })" class="btn btn-outline-primary btn-sm" title="View Details">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", "Level", new { id = level.Id })" class="btn btn-outline-secondary btn-sm" title="Edit">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-outline-danger btn-sm" title="Delete" 
                                                            onclick="confirmDelete(@level.Id, '@level.Desc')">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="empty-state">
                                <i class="bi bi-diagram-3 display-1 text-muted mb-3"></i>
                                <h4 class="text-muted">No Levels Configured</h4>
                                <p class="text-muted mb-4">You haven't created any workflow levels yet. Start by adding your first level!</p>
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addLevelModal">
                                    <i class="bi bi-plus-circle me-2"></i>Add Your First Level
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>

            @if (Model.Any())
            {
                <div class="card mt-4">
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-4">
                                <div class="stat-item">
                                    <h3 class="text-primary">@Model.Count()</h3>
                                    <p class="text-muted mb-0">Total Levels</p>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="stat-item">
                                    <h3 class="text-success">@Model.Count(l => l.IsActive)</h3>
                                    <p class="text-muted mb-0">Active</p>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="stat-item">
                                    <h3 class="text-danger">@Model.Count(l => !l.IsActive)</h3>
                                    <p class="text-muted mb-0">Inactive</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Add Level Modal -->
<div class="modal fade" id="addLevelModal" tabindex="-1" aria-labelledby="addLevelModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addLevelModalLabel">
                    <i class="bi bi-plus-circle me-2"></i>Add New Level
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addLevelForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="levelName" class="form-label">Level Name <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="levelName" name="levelName" required 
                               placeholder="e.g. L1, L2, S1, etc.">
                        <div class="form-text">Enter a unique level name identifier</div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="description" class="form-label">Description <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="description" name="description" rows="3" required
                                  placeholder="Enter level description"></textarea>
                        <div class="form-text">Describe the purpose of this level</div>
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="isActive" name="isActive" checked>
                            <label class="form-check-label" for="isActive">
                                Active Level
                            </label>
                        </div>
                        <div class="form-text">Inactive levels will not be available for new workflows</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-2"></i>Save Level
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .page-header {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        padding: 2rem;
        border-radius: 1rem;
        border: 1px solid #e5e7eb;
    }
    
    .page-title {
        font-weight: 700;
        margin-bottom: 0.5rem;
    }
    
    .card {
        border: none;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        border-radius: 1rem;
    }
    
    .table {
        margin-bottom: 0;
    }
    
    .table thead th {
        background: #f8fafc;
        border: none;
        font-weight: 600;
        color: #374151;
        padding: 1rem;
        border-bottom: 2px solid #e5e7eb;
    }
    
    .table tbody td {
        padding: 1rem;
        border-bottom: 1px solid #f1f5f9;
        vertical-align: middle;
    }
    
    .table tbody tr:hover {
        background-color: #f8fafc;
    }
    
    .badge {
        font-size: 0.75rem;
        padding: 0.5rem 0.75rem;
        border-radius: 0.5rem;
    }
    
    .btn-sm {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        border-radius: 0.375rem;
    }
    
    .empty-state {
        padding: 3rem 1rem;
    }
    
    .stat-item {
        padding: 1rem;
    }
    
    .stat-item h3 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }
    
    .text-gradient {
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .btn-group .btn {
        margin-right: 0;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize tooltips for action buttons
            $('[data-bs-toggle="tooltip"]').tooltip();
            
            // Handle form submission
            $('#addLevelForm').on('submit', function(e) {
                e.preventDefault();
                
                var formData = {
                    levelName: $('#levelName').val(),
                    desc: $('#description').val(),
                    isActive: $('#isActive').is(':checked')
                };
                
                // Show loading state
                var submitBtn = $(this).find('button[type="submit"]');
                var originalText = submitBtn.html();
                submitBtn.html('<i class="bi bi-hourglass-split me-2"></i>Saving...').prop('disabled', true);
                
                $.ajax({
                    url: '@Url.Action("Create", "Level")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: 'Level added successfully.',
                                confirmButtonColor: '#3b82f6'
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: response.message || 'Failed to add level.',
                                confirmButtonColor: '#dc2626'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'An error occurred while adding the level.',
                            confirmButtonColor: '#dc2626'
                        });
                    },
                    complete: function() {
                        // Restore button state
                        submitBtn.html(originalText).prop('disabled', false);
                    }
                });
            });
        });
        
        function confirmDelete(levelId, levelDesc) {
            Swal.fire({
                title: 'Are you sure?',
                text: `You are about to delete level "${levelDesc}". This action cannot be undone!`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Perform delete action
                    window.location.href = '@Url.Action("Delete", "Level")/' + levelId;
                }
            });
        }
    </script>
}