@model Ideku.ViewModels.CreateIdeaViewModel
@{
    ViewData["Title"] = "Submit New Idea";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-header mb-4">
                <h2 class="page-title text-gradient">
                    <i class="bi bi-plus-circle-fill me-2"></i>Submit New Idea
                </h2>
                <p class="text-muted">Share your innovative ideas to improve our organization</p>
            </div>

            <form id="createIdeaForm" asp-action="Create" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                
                <!-- Hidden Fields -->
                <input asp-for="InitiatorUserId" type="hidden" />
                <input asp-for="EmployeeId" type="hidden" />

                <!-- Initiator Profile Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-person-badge me-2"></i>Initiator Profile
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label asp-for="BadgeNumber" class="form-label">Badge Number <span class="text-danger">*</span></label>
                                    <input asp-for="BadgeNumber" class="form-control" id="badgeNumberInput" placeholder="Enter badge number" />
                                    <small class="form-text text-muted">Enter badge number to auto-populate employee info</small>
                                    <span asp-validation-for="BadgeNumber" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="employeeInfoContainer" style="display: none;">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Employee Name</label>
                                    <input asp-for="EmployeeName" class="form-control" readonly />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Position</label>
                                    <input asp-for="Position" class="form-control" readonly />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Division</label>
                                    <input asp-for="Division" class="form-control" readonly />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Department</label>
                                    <input asp-for="Department" class="form-control" readonly />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">Email</label>
                                    <input asp-for="Email" class="form-control" readonly />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Idea Details Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-lightbulb me-2"></i>Idea Details
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Division & Department Row -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ToDivisionId" class="form-label">To Division <span class="text-danger">*</span></label>
                                    <select asp-for="ToDivisionId" class="form-select" asp-items="Model.DivisionList" id="divisionSelect">
                                    </select>
                                    <small class="form-text text-muted">Which division is this idea intended for?</small>
                                    <span asp-validation-for="ToDivisionId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ToDepartmentId" class="form-label">To Department <span class="text-danger">*</span></label>
                                    <select asp-for="ToDepartmentId" class="form-select" asp-items="Model.DepartmentList" id="departmentSelect" disabled>
                                    </select>
                                    <small class="form-text text-muted">Which department is this idea intended for?</small>
                                    <span asp-validation-for="ToDepartmentId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Category & Event Row -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CategoryId" class="form-label">Category <span class="text-danger">*</span></label>
                                    <select asp-for="CategoryId" class="form-select" asp-items="Model.CategoryList">
                                    </select>
                                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="EventId" class="form-label">Event</label>
                                    <select asp-for="EventId" class="form-select" asp-items="Model.EventList">
                                    </select>
                                    <small class="form-text text-muted">Event selection is optional</small>
                                    <span asp-validation-for="EventId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Idea Name -->
                        <div class="mb-3">
                            <label asp-for="IdeaName" class="form-label">Idea Name <span class="text-danger">*</span></label>
                            <input asp-for="IdeaName" class="form-control" placeholder="Give your idea a catchy title" />
                            <small class="form-text text-muted">Give your idea a catchy title</small>
                            <span asp-validation-for="IdeaName" class="text-danger"></span>
                        </div>

                        <!-- Idea Description -->
                        <div class="mb-3">
                            <label asp-for="IdeaDescription" class="form-label">Idea Description <span class="text-danger">*</span></label>
                            <textarea asp-for="IdeaDescription" class="form-control" rows="5" placeholder="Describe the problem or issue this idea addresses"></textarea>
                            <small class="form-text text-muted">What problem does your idea solve?</small>
                            <span asp-validation-for="IdeaDescription" class="text-danger"></span>
                        </div>

                        <!-- Solution -->
                        <div class="mb-3">
                            <label asp-for="Solution" class="form-label">Solution <span class="text-danger">*</span></label>
                            <textarea asp-for="Solution" class="form-control" rows="5" placeholder="Explain your proposed solution"></textarea>
                            <small class="form-text text-muted">How would you implement this idea?</small>
                            <span asp-validation-for="Solution" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Financial Impact & Attachments Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-currency-dollar me-2"></i>Financial Impact & Attachments
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Saving Cost -->
                        <div class="mb-4">
                            <label asp-for="SavingCost" class="form-label">Saving Cost (USD) <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text">USD</span>
                                <input asp-for="SavingCost" type="text" class="form-control" id="savingCostInput" placeholder="Enter amount" />
                            </div>
                            <small class="form-text text-muted">Estimated cost savings (e.g., 1,000 or 1,000,000)</small>
                        </div>

                        <!-- Attachments -->
                        <div class="mb-4">
                            <label class="form-label">Attachments <span class="text-muted">(Optional)</span></label>
                            
                            <!-- Add File Button -->
                            <div class="mb-3">
                                <input type="file" id="fileInput" class="d-none" accept=".pdf,.doc,.docx,.xlsx,.jpg,.jpeg,.png" />
                                <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('fileInput').click()">
                                    <i class="bi bi-plus-circle me-2"></i>Add File
                                </button>
                                <small class="form-text text-muted d-block mt-1">Add files one by one. Accepted: PDF, DOC, DOCX, XLSX, JPG, PNG</small>
                            </div>
                            
                            <!-- Selected Files List -->
                            <div id="filesList" class="border rounded p-3 bg-light">
                                <div class="text-muted text-center" id="noFilesMessage">
                                    <i class="bi bi-cloud-arrow-up fs-1 d-block mb-2"></i>
                                    No files added yet
                                </div>
                            </div>
                            
                            <!-- Hidden inputs for files -->
                            <div id="hiddenFileInputs"></div>
                            
                            <span asp-validation-for="AttachmentFiles" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="card">
                    <div class="card-body text-end">
                        <button type="button" class="btn btn-outline-secondary me-2" onclick="window.history.back();">
                            <i class="bi bi-x-circle me-2"></i>Cancel
                        </button>
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="bi bi-check-circle me-2"></i>Submit Idea
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Debounce timer for badge number input
            let debounceTimer;

            // Badge Number Auto-populate Employee Info (Real-time with Debounce)
            $('#badgeNumberInput').on('input', function() {
                clearTimeout(debounceTimer);
                
                var badgeNumber = $(this).val().trim();
                var infoContainer = $('#employeeInfoContainer');

                if (!badgeNumber) {
                    // If input is empty, hide immediately
                    infoContainer.slideUp();
                    $('#EmployeeName').val('');
                    $('#Position').val('');
                    $('#Division').val('');
                    $('#Department').val('');
                    $('#Email').val('');
                    $('#EmployeeId').val('');
                    return;
                }

                debounceTimer = setTimeout(function() {
                    // Show loading and container
                    infoContainer.slideDown();
                    $('#EmployeeName').val('Loading...');
                    $('#Position').val('Loading...');
                    $('#Division').val('Loading...');
                    $('#Department').val('Loading...');
                    $('#Email').val('Loading...');
                    
                    // AJAX call to get employee info
                    $.get('/Idea/GetEmployeeByBadgeNumber', { badgeNumber: badgeNumber })
                        .done(function(response) {
                            if (response.success) {
                                $('#EmployeeName').val(response.data.name);
                                $('#Position').val(response.data.position);
                                $('#Division').val(response.data.division);
                                $('#Department').val(response.data.department);
                                $('#Email').val(response.data.email);
                                $('#EmployeeId').val(response.data.employeeId);
                            } else {
                                // Keep container visible but show "Not Found"
                                $('#EmployeeName').val('Not Found');
                                $('#Position').val('Not Found');
                                $('#Division').val('Not Found');
                                $('#Department').val('Not Found');
                                $('#Email').val('Not Found');
                                $('#EmployeeId').val('');
                            }
                        })
                        .fail(function() {
                            $('#EmployeeName').val('Error');
                            $('#Position').val('Error');
                            $('#Division').val('Error');
                            $('#Department').val('Error');
                            $('#Email').val('Error');
                            $('#EmployeeId').val('');
                        });
                }, 500); // Wait for 500ms after user stops typing
            });

            // Saving Cost Formatting with Thousand Separator
            $('#savingCostInput').on('input', function() {
                var value = $(this).val();
                
                // Remove all non-digit characters (integers only)
                var numericValue = value.replace(/[^\d]/g, '');
                
                // Store the numeric value for form submission
                if (numericValue) {
                    // Set the raw numeric value as a data attribute
                    $(this).attr('data-numeric-value', numericValue);
                    
                    // Format with thousand separator for display
                    var formattedValue = formatNumberWithCommas(numericValue);
                    $(this).val(formattedValue);
                    
                    // Override the validation to use numeric value
                    $(this)[0].setCustomValidity('');
                } else {
                    $(this).removeAttr('data-numeric-value');
                    $(this)[0].setCustomValidity('Saving Cost is required');
                }
                
                // Trigger validation
                $(this).valid();
            });

            // Function to format number with thousand separator (integers only)
            function formatNumberWithCommas(value) {
                // Add commas to integer part
                return value.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            }

            // Convert display value back to numeric before form submission
            function prepareSavingCostForSubmission() {
                var input = $('#savingCostInput');
                var numericValue = input.attr('data-numeric-value') || input.val().replace(/[^\d]/g, '');
                
                // Validate the numeric value
                if (!numericValue || parseInt(numericValue) <= 0) {
                    return false;
                }
                
                input.val(numericValue);
                return numericValue;
            }

            // Division-Department Cascade Dropdown
            $('#divisionSelect').change(function() {
                var divisionId = $(this).val();
                var departmentSelect = $('#departmentSelect');
                
                if (divisionId) {
                    departmentSelect.prop('disabled', false);
                    
                    // Show loading
                    departmentSelect.html('<option value="">Loading departments...</option>');
                    
                    // AJAX call to get departments
                    $.get('/Idea/GetDepartmentsByDivision', { divisionId: divisionId })
                        .done(function(data) {
                            departmentSelect.empty();
                            // Add placeholder first
                            departmentSelect.append('<option value="">-- Select To Department --</option>');
                            
                            $.each(data, function(index, item) {
                                departmentSelect.append($('<option>', {
                                    value: item.value,
                                    text: item.text
                                }));
                            });
                        })
                        .fail(function() {
                            departmentSelect.html('<option value="">Error loading departments</option>');
                        });
                } else {
                    departmentSelect.prop('disabled', true);
                    departmentSelect.html('<option value="">-- Select To Division First --</option>');
                }
            });

            // File Upload Handler - Add One by One
            let selectedFiles = [];
            let fileCounter = 0;
            
            $('#fileInput').change(function() {
                const file = this.files[0];
                if (!file) return;
                
                // Check file size (max 10MB)
                if (file.size > 10 * 1024 * 1024) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'File Too Large',
                        text: 'File size must be less than 10MB',
                        confirmButtonText: 'OK'
                    });
                    return;
                }
                
                // Add file to array
                const fileObj = {
                    id: fileCounter++,
                    file: file,
                    name: file.name,
                    size: file.size,
                    type: file.type
                };
                
                selectedFiles.push(fileObj);
                addFileToList(fileObj);
                createHiddenInput(fileObj);
                updateFilesDisplay();
                
                // Reset input
                this.value = '';
            });
            
            function addFileToList(fileObj) {
                const fileSize = formatFileSize(fileObj.size);
                const fileIcon = getFileIcon(fileObj.name);
                
                const fileItem = `
                    <div class="d-flex align-items-center justify-content-between p-2 border rounded mb-2 bg-white" id="file-${fileObj.id}">
                        <div class="d-flex align-items-center">
                            <i class="bi ${fileIcon} fs-4 me-3 text-primary"></i>
                            <div>
                                <div class="fw-medium">${fileObj.name}</div>
                                <small class="text-muted">${fileSize}</small>
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeFile(${fileObj.id})">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                `;
                
                $('#filesList').append(fileItem);
            }
            
            function removeFile(fileId) {
                // Remove from array
                selectedFiles = selectedFiles.filter(f => f.id !== fileId);
                
                // Remove from UI
                $(`#file-${fileId}`).remove();
                $(`#hiddenFile-${fileId}`).remove();
                
                updateFilesDisplay();
            }
            
            function createHiddenInput(fileObj) {
                const input = $(`<input type="file" name="AttachmentFiles" id="hiddenFile-${fileObj.id}" style="display:none" />`);
                
                // Create a DataTransfer object to set the file
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(fileObj.file);
                input[0].files = dataTransfer.files;
                
                $('#hiddenFileInputs').append(input);
            }
            
            function updateFilesDisplay() {
                const noFilesMsg = $('#noFilesMessage');
                
                if (selectedFiles.length === 0) {
                    noFilesMsg.show();
                } else {
                    noFilesMsg.hide();
                }
            }
            
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
            
            function getFileIcon(filename) {
                const ext = filename.toLowerCase().split('.').pop();
                const icons = {
                    'pdf': 'bi-file-earmark-pdf',
                    'doc': 'bi-file-earmark-word',
                    'docx': 'bi-file-earmark-word',
                    'xls': 'bi-file-earmark-excel',
                    'xlsx': 'bi-file-earmark-excel',
                    'ppt': 'bi-file-earmark-ppt',
                    'pptx': 'bi-file-earmark-ppt',
                    'jpg': 'bi-file-earmark-image',
                    'jpeg': 'bi-file-earmark-image',
                    'png': 'bi-file-earmark-image',
                    'gif': 'bi-file-earmark-image'
                };
                return icons[ext] || 'bi-file-earmark';
            }
            
            // Make removeFile global
            window.removeFile = removeFile;

            // Form Submission with SweetAlert
            $('#createIdeaForm').submit(function(e) {
                e.preventDefault();
                
                // Check saving cost value
                var savingCostValue = $('#savingCostInput').val().replace(/[^\d.]/g, '');
                if (!savingCostValue || parseFloat(savingCostValue) <= 0) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Saving Cost Required',
                        text: 'Please enter a valid saving cost greater than 0.',
                        confirmButtonText: 'OK'
                    });
                    return;
                }
                
                // Convert formatted saving cost back to numeric value for submission
                $('#savingCostInput').val(savingCostValue);
                
                // Files are now optional - no validation needed
                
                // Check if form is valid using ASP.NET Core client-side validation
                if (!$(this).valid()) {
                    return;
                }
                
                var submitBtn = $('#submitBtn');
                submitBtn.prop('disabled', true);
                submitBtn.html('<span class="spinner-border spinner-border-sm me-2"></span>Submitting...');
                
                var formData = new FormData(this);
                
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: response.message,
                                confirmButtonText: 'OK'
                            }).then(function() {
                                window.location.href = '/Idea/Index';
                            });
                        } else {
                            // Show server validation errors
                            if (response.errors && response.errors.length > 0) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Submission Failed',
                                    text: 'Please fill in all required fields correctly.',
                                    confirmButtonText: 'OK'
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error!',
                                    text: response.message,
                                    confirmButtonText: 'Try Again'
                                });
                            }
                        }
                    },
                    error: function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'An unexpected error occurred. Please try again.',
                            confirmButtonText: 'Try Again'
                        });
                    },
                    complete: function() {
                        submitBtn.prop('disabled', false);
                        submitBtn.html('<i class="bi bi-check-circle me-2"></i>Submit Idea');
                    }
                });
            });
        });
    </script>
}

<style>
    .page-header {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        padding: 2rem;
        border-radius: 1rem;
        border: 1px solid #e5e7eb;
    }
    
    .page-title {
        font-weight: 700;
        margin-bottom: 0.5rem;
    }
    
    .card {
        border: none;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        border-radius: 1rem;
        margin-bottom: 1.5rem;
    }
    
    .card-header {
        background: #f8fafc;
        border-bottom: 1px solid #e5e7eb;
        border-radius: 1rem 1rem 0 0 !important;
        padding: 1.25rem 1.5rem;
    }
    
    .card-body {
        padding: 1.5rem;
    }
    
    .form-label {
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.5rem;
    }
    
    .form-control, .form-select {
        border: 1px solid #d1d5db;
        border-radius: 0.5rem;
        padding: 0.75rem 1rem;
        transition: all 0.2s ease;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #9c1c31;
        box-shadow: 0 0 0 3px rgba(156, 28, 49, 0.1);
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #9c1c31 0%, #5c1f25 100%);
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: all 0.2s ease;
    }
    
    .btn-primary:hover {
        background: linear-gradient(135deg, #a14f52 0%, #5c1f25 100%);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(156, 28, 49, 0.3);
    }
    
    .btn-outline-secondary {
        border: 1px solid #6b7280;
        color: #6b7280;
        border-radius: 0.5rem;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: all 0.2s ease;
    }
    
    .btn-outline-secondary:hover {
        background: #6b7280;
        border-color: #6b7280;
        color: white;
        transform: translateY(-1px);
    }
    
    .input-group-text {
        background: #f8fafc;
        border: 1px solid #d1d5db;
        color: #6b7280;
        font-weight: 500;
    }
    
    .file-info .badge {
        font-size: 0.8rem;
        padding: 0.5rem 0.75rem;
    }
    
    textarea {
        resize: vertical;
        min-height: 120px;
    }
    
    .text-danger {
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
    
    .form-text {
        font-size: 0.8rem;
        color: #6b7280;
    }
    
    .spinner-border-sm {
        width: 1rem;
        height: 1rem;
    }
    
    #filesList {
        min-height: 120px;
        max-height: 300px;
        overflow-y: auto;
    }
    
    #filesList:empty:before {
        content: '';
    }
    
    .file-item {
        transition: all 0.2s ease;
    }
    
    .file-item:hover {
        transform: translateX(5px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    #noFilesMessage {
        color: #6c757d;
    }
    
    .btn-outline-primary {
        transition: all 0.2s ease;
    }
    
    .btn-outline-primary:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0,123,255,0.2);
    }
    
</style>
